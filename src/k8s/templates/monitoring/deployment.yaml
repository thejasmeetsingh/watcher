# Prometheus deployment config
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-prometheus
  namespace: {{ .Values.monitoring.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: "{{ .Values.monitoring.prometheus.image.repository }}:{{ .Values.monitoring.prometheus.image.tag }}"
        imagePullPolicy: {{ .Values.monitoring.prometheus.image.pullPolicy }}
        resources:
          {{- toYaml .Values.monitoring.prometheus.resources | nindent 12 }}
        args:
          {{- toYaml .Values.monitoring.prometheus.args | nindent 12 }}
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus

      volumes:
      - name: prometheus-config
        configMap:
          name: {{ .Release.Name }}-prometheus-config
---
# Grafana deployment config
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-grafana
  namespace: {{ .Values.monitoring.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: "{{ .Values.monitoring.grafana.image.repository }}:{{ .Values.monitoring.grafana.image.tag }}"
        imagePullPolicy: {{ .Values.monitoring.grafana.image.pullPolicy }}
        resources:
          {{- toYaml .Values.monitoring.grafana.resources | nindent 12 }}
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-grafana-secrets
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        - name: grafana-config
          mountPath: /etc/grafana

      volumes:
      - name: grafana-data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-grafana-pvc
      - name: grafana-config
        configMap:
          name: {{ .Release.Name }}-grafana-config
