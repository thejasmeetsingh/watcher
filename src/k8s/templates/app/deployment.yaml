# Backend deployment config
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
  namespace: {{ .Values.app.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: "{{ .Values.app.backend.image.repository }}:{{ .Values.app.backend.image.tag }}"
        imagePullPolicy: {{ .Values.app.backend.image.pullPolicy }}
        resources:
          {{- toYaml .Values.app.backend.resources | nindent 12 }}
        livenessProbe:
          {{- toYaml .Values.app.backend.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.app.backend.readinessProbe | nindent 12 }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-app-config
        - secretRef:
            name: {{ .Release.Name }}-app-secrets
---
# PostgreSQL DB deployment config
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-db
  namespace: {{ .Values.app.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: postgres
        image: "{{ .Values.app.database.image.repository }}:{{ .Values.app.database.image.tag }}"
        resources:
          {{- toYaml .Values.app.database.resources | nindent 12 }}
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-app-secrets
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-app-secrets
              key: DB_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-app-secrets
              key: DB_NAME
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data

      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-postgres-pvc
